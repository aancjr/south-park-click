{"ast":null,"code":"var _jsxFileName = \"/Users/Home/Desktop/Bootcamp/Homework/south-park-click/src/App.js\";\nimport React, { Component } from 'react';\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/Navbar\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: [],\n      friends,\n      count: 0\n    };\n\n    this.southParkMemory = id => {\n      const character = this.state.friends.filter(friend => friend.id !== id);\n      console.log(character);\n      this.setState({\n        character,\n        count: this.state.count + 1\n      });\n    };\n\n    this.duplicateId = id => {\n      if (id === this.state.clicked.length) {\n        console.log(\"Duplicate\");\n      }\n\n      ;\n    };\n\n    this.shuffleCards = arr => {\n      if (this.state.count <= 12) {\n        for (let i = arr.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * arr.length);\n          const temp = arr[i];\n          arr[i] = arr[j];\n          arr[j] = temp;\n        }\n\n        ;\n      } else {\n        this.setState({\n          count: 0\n        });\n      }\n\n      ;\n      return arr;\n    };\n  }\n\n  componentDidMount() {\n    this.shuffleCards(friends);\n  }\n\n  componentDidUpdate() {\n    this.duplicateId();\n    this.shuffleCards(friends);\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      count: this.state.count,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"South Park Click!\"), React.createElement(\"div\", {\n      className: \"container col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.friends.map(friend => React.createElement(FriendCard // shuffle={this.shuffleCards}\n    , {\n      southParkMemory: this.southParkMemory,\n      key: friend.id,\n      id: friend.id,\n      name: friend.name,\n      image: friend.image,\n      alias: friend.alias,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Home/Desktop/Bootcamp/Homework/south-park-click/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Navbar","Title","friends","App","state","clicked","count","southParkMemory","id","character","filter","friend","console","log","setState","duplicateId","length","shuffleCards","arr","i","j","Math","floor","random","temp","componentDidMount","componentDidUpdate","render","map","name","image","alias"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport FriendCard from \"./components/FriendCard\"\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/Navbar\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nimport './App.css';\n\n\n\nclass App extends Component {\n\n  state = {\n    clicked: [],\n    friends,\n    count: 0\n  };\n\n\n  southParkMemory = id => {\n    const character = this.state.friends.filter(friend => friend.id !== id);\n    console.log(character);\n    this.setState({ character, count: this.state.count + 1 });\n  };\n\n  duplicateId = id => {\n\n    if (id === this.state.clicked.length) {\n      console.log(\"Duplicate\");\n    };\n  };\n\n  shuffleCards = arr => {\n    if (this.state.count <= 12) {\n      for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * arr.length)\n        const temp = arr[i]\n        arr[i] = arr[j]\n        arr[j] = temp\n      };\n    } else {\n      \n      this.setState({\n        count: 0\n      })\n    };\n    return arr\n  };\n\n  componentDidMount() {\n    this.shuffleCards(friends);\n  }\n\n  componentDidUpdate() {\n    this.duplicateId()\n    this.shuffleCards(friends);\n  }\n\n\n  render() {\n\n    return (\n      <Wrapper>\n        <Navbar count={this.state.count} />\n        <Title>South Park Click!</Title>\n        <div className=\"container col-8\">\n          {this.state.friends.map(friend =>\n            <FriendCard\n              // shuffle={this.shuffleCards}\n              southParkMemory={this.southParkMemory}\n              key={friend.id}\n              id={friend.id}\n              name={friend.name}\n              image={friend.image}\n              alias={friend.alias}\n            />\n          )}\n        </div>\n      </Wrapper>\n\n    )\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}