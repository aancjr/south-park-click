{"ast":null,"code":"var _jsxFileName = \"/Users/Home/Desktop/Bootcamp/Homework/south-park-click/src/App.js\";\nimport React, { Component } from 'react';\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/Navbar\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: [],\n      friends,\n      count: 0\n    };\n\n    this.southParkMemory = id => {\n      if (this.state.clicked.includes(id)) {\n        alert(\"Try again!\");\n        this.setState({\n          count: 0,\n          clicked: [],\n          friends\n        });\n      } else {\n        this.setState(prevState => ({\n          clicked: [id, ...prevState.clicked],\n          count: this.state.count + 1\n        }));\n        console.log(this.state.clicked);\n      }\n    };\n\n    this.shuffleCards = arr => {\n      if (this.state.count <= 12) {\n        for (let i = arr.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * arr.length);\n          const temp = arr[i];\n          arr[i] = arr[j];\n          arr[j] = temp;\n        }\n\n        ;\n      } else {\n        this.setState({\n          count: 0\n        });\n      }\n\n      ;\n      return arr;\n    };\n  }\n\n  componentDidMount() {\n    this.shuffleCards(friends);\n  }\n\n  componentDidUpdate() {\n    // this.duplicateId(friends.id)\n    this.shuffleCards(friends);\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      count: this.state.count,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"South Park Click!\"), React.createElement(\"div\", {\n      className: \"container col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.friends.map(friend => React.createElement(FriendCard, {\n      southParkMemory: this.southParkMemory,\n      key: friend.id,\n      id: friend.id,\n      name: friend.name,\n      image: friend.image,\n      alias: friend.alias,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Home/Desktop/Bootcamp/Homework/south-park-click/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Navbar","Title","friends","App","state","clicked","count","southParkMemory","id","includes","alert","setState","prevState","console","log","shuffleCards","arr","i","length","j","Math","floor","random","temp","componentDidMount","componentDidUpdate","render","map","friend","name","image","alias"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport FriendCard from \"./components/FriendCard\"\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/Navbar\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nimport './App.css';\n\n\n\nclass App extends Component {\n\n  state = {\n    clicked: [],\n    friends,\n    count: 0\n  };\n\n\n  southParkMemory = id => {\n\n    if (this.state.clicked.includes(id)) {\n\n      alert(\"Try again!\");\n\n      this.setState({\n        count: 0,\n        clicked: [],\n        friends\n      });\n\n    } else {\n\n      this.setState(prevState => ({\n        clicked: [id, ...prevState.clicked],\n        count: this.state.count + 1\n      }));\n\n      console.log(this.state.clicked);\n\n    }\n  };\n\n  shuffleCards = arr => {\n\n    if (this.state.count <= 12) {\n      for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * arr.length)\n        const temp = arr[i]\n        arr[i] = arr[j]\n        arr[j] = temp\n      };\n\n    } else {\n\n      this.setState({\n        count: 0\n      });\n\n    };\n    return arr\n  };\n\n  componentDidMount() {\n    this.shuffleCards(friends);\n  }\n\n  componentDidUpdate() {\n    // this.duplicateId(friends.id)\n    this.shuffleCards(friends);\n  }\n\n\n  render() {\n\n    return (\n      <Wrapper>\n        <Navbar count={this.state.count} />\n        <Title>South Park Click!</Title>\n        <div className=\"container col-8\">\n          {this.state.friends.map(friend =>\n            <FriendCard\n              southParkMemory={this.southParkMemory}\n              key={friend.id}\n              id={friend.id}\n              name={friend.name}\n              image={friend.image}\n              alias={friend.alias}\n            />\n          )}\n        </div>\n      </Wrapper>\n    )\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}